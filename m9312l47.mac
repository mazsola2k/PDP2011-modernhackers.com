         .title m9312l47 - low rom - show modelcode, control registers/controllers, then boot

;--
;-- Copyright (c) 2008-2019 Sytse van Slooten
;--
;-- Permission is hereby granted to any person obtaining a copy of these VHDL source files and
;-- other language source files and associated documentation files ("the materials") to use
;-- these materials solely for personal, non-commercial purposes.
;-- You are also granted permission to make changes to the materials, on the condition that this
;-- copyright notice is retained unchanged.
;--
;-- The materials are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY;
;-- without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
;--
;
; $Revision: 1.11 $
;
; general purpose register definitions
;
r0       = %0
r1       = %1
r2       = %2
r3       = %3
r4       = %4
r5       = %5
r6       = %6
r7       = %7
sp       = %6
pc       = %7

         .asect
         .=165000
         base     =.
         .word 0,0,0,0
prtoct:  jmp   @#173004
prtascz: jmp   @#173010
         .=base+20
;
; delay a bit, give the terminal (if it's there) some time to boot
;
         clr   r2
10$:
         inc   r2
         bne   10$
;
; hello world
;
         mov   #hello,r2
         mov   pc,r1
         br    prtascz
;
; decode cpu modelcode, should be in kernel r0 after reset
;
mcode:
         mov   #47.,r2
10$:
         inc   r2
         cmp   r0,#10.
         blt   20$
         sub   #10.,r0
         br    10$
20$:
         add   #48.,r0
         tstb  @#177564
         bpl   .-4
         movb  r2,@#177566
         tstb  @#177564
         bpl   .-4
         movb  r0,@#177566
;
; check for fpu
;
         mov   #1000,sp
         mov   #60$,@#10
         clr   @#12
         setd
         mov   #fpu,r2
         mov   pc,r1
         br    prtascz
60$:
;
;
;
         mov   #crlf,r2
         mov   pc,r1
         br    prtascz
;
; list cr
;
listcr:
         clr   r4
         mov   #60$,@#4
         clr   @#6
10$:
         clr   r5
20$:
         mov   #1000,sp      ; reset sp
;         dec   r4            ; fixme, check if this can be combined on the tst (r4) for all models
;         dec   r4
         tst   -(r4)         ; check address
         tst   r5            ; was this the first in a range
         bne   30$           ; branch if no
         mov   r4,r0
         mov   pc,r1
         br    prtoct
30$:
         inc   r5            ; count valid addresses in seq
         mov   #adrtab,r0    ;
40$:
         cmp   (r0)+,r4      ; match?
         beq   50$           ; yes
         tst   (r0)          ;
         beq   20$           ; end of table - 0 in 2nd word? then try next
         tst   (r0)+         ; bump
         br    40$           ; try next table entry
50$:
60$:
         tst   r5            ; did we find nothing?
         beq   90$           ; no didn't find any responding addr
         cmp   #1,r5         ; did we find just one address?
         beq   80$
         mov   (r0),r5       ; save pointer to title
         mov   r4,r0
         tst   r5            ; break on title?
         bne   64$
         inc   r0
         inc   r0
64$:
         mov   #sep,r2
         mov   pc,r1
         br    prtascz
         mov   pc,r1
         br    prtoct
         br    82$
80$:
         mov   (r0),r5
         mov   #ssep,r2
         mov   pc,r1
         br    prtascz
82$:
         tst   r5
         beq   84$
         mov   #tsep,r2
         mov   pc,r1
         br    prtascz
         mov   r5,r2
         mov   pc,r1
         br    prtascz
84$:
         mov   #crlf,r2
         mov   pc,r1
         br    prtascz
90$:
         cmp   #160000,r4
         blt   10$
         jmp   @#173000
;
; data
;
         .even

hello:   .ascii / /<15><12>
         .asciz /Hello, world [t47]: cpu 11/<57>
fpu:     .asciz / fpu/
crlf:    .asciz <15><12>
sep:     .asciz / - /
tsep:    .asciz /  /
ssep:    .asciz /         /

          .even
adrtab:   .word 177776,tpsw
          .word 177774,tslr
          .word 177772,tpirq
          .word 177770,tmbr
          .word 177766,tcer
          .word 177764,tsys
          .word 177760,tsiz
          .word 177752,tmem
          .word 177750,tbr
          .word 177740,tmem
          .word 177600,tpdr
          .word 177572,tmmu
          .word 177570,tsdr
          .word 177560,tkl
          .word 177546,tkw
          .word 177400,trk
          .word 176700,trh
          .word 176520,tkl
          .word 176510,tkl
          .word 176500,tkl
          .word 174510,txu
          .word 174400,trl
          .word 173000,tm9312
          .word 172300,tpdr
          .word 172200,tpdr
          .word 172516,tmmu
          .word 170200,tubm
          .word 167770,tdr11c
          .word 165000,tm9312
          .word 0,0
;
tpsw:    .asciz /psw/
tslr:    .asciz /slr/
tpirq:   .asciz /pirq/
tmbr:    .asciz /mbr/
tcer:    .asciz /cer/
tsys:    .asciz /id/
tsiz:    .asciz /size/
tmmu:    .asciz /mmu/
trl:     .asciz /rl/
trk:     .asciz /rk/
trh:     .asciz /rh/
tm9312:  .asciz /m9312/
tkw:     .asciz /kw/
tkl:     .asciz /kl/
tsdr:    .asciz /sdr/
tubm:    .asciz /ubm/
txu:     .asciz /xu/
tbr:     .asciz /mnt/
tmem:    .asciz /mr/
tpdr:    .ascii /pdr/
         .ascii <57>
         .asciz /par/
tdr11c:  .asciz /dr11c/