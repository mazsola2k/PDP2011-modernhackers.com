       1                                         .title m9312h44 - standalone high rom - show model then boot rk or rl or rp
       2                                
       3                                ;--
       4                                ;-- Copyright (c) 2008-2019 Sytse van Slooten
       5                                ;--
       6                                ;-- Permission is hereby granted to any person obtaining a copy of these VHDL source files and
       7                                ;-- other language source files and associated documentation files ("the materials") to use
       8                                ;-- these materials solely for personal, non-commercial purposes.
       9                                ;-- You are also granted permission to make changes to the materials, on the condition that this
      10                                ;-- copyright notice is retained unchanged.
      11                                ;--
      12                                ;-- The materials are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY;
      13                                ;-- without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
      14                                ;--
      15                                ;
      16                                ; general purpose register definitions
      17                                ;
      18 000000                         r0       = %0
      19 000001                         r1       = %1
      20 000002                         r2       = %2
      21 000003                         r3       = %3
      22 000004                         r4       = %4
      23 000005                         r5       = %5
      24 000006                         r6       = %6
      25 000007                         r7       = %7
      26 000006                         sp       = %6
      27 000007                         pc       = %7
      28                                
      29 000000 012702  173622                   mov #hello+173000,r2
      30 000004 012705  173014                   mov #m000+173000,r5
      31 000010 000167  000554                   jmp barf
      32                                m000:
      33                                ;
      34                                ; decode cpu modelcode, should be in kernel r0 after reset
      35                                ;
      36 000014 012702  000057                   mov #47.,r2
      37                                m100:
      38 000020 005202                           inc r2
      39 000022 020027  000012                   cmp r0,#10.
      40 000026 002403                           blt m200
      41 000030 162700  000012                   sub #10.,r0
      42 000034 000771                           br m100
      43                                m200:
      44 000036 062700  000060                   add #48.,r0
      45 000042 105737  177564                   tstb @#177564
      46 000046 100375                           bpl .-4
      47 000050 110237  177566                   movb r2,@#177566
      48 000054 105737  177564                   tstb @#177564
      49 000060 100375                           bpl .-4
      50 000062 110037  177566                   movb r0,@#177566
      51                                ;
      52                                ;
      53                                ;
      54 000066 012702  173661                   mov #hello2+173000,r2
      55 000072 012705  173102                   mov #l1+173000,r5
      56 000076 000167  000466                   jmp barf
      57                                l1:
      58                                ;
      59                                ; copied (more or less) from simh
      60                                ;
      61 000102 012704  173200                   mov #brl+173000,r4           ; if probe fails, brl
      62 000106 012705  173126                   mov #brk+173000,r5           ; if probe ok, brk
      63 000112 012701  177400                   mov #177400,r1
      64 000116 012702  173664                   mov #bootrk+173000,r2
      65 000122 000167  000402                   jmp cbarf
      66                                ;
      67                                brk:
      68 000126 012706  002000                   mov #2000,sp
      69 000132 005000                           clr r0
      70 000134 012701  177412                   mov #177412,r1                ; rkda
      71 000140 005011                           clr (r1)                      ; load da = 0
      72 000142 005041                           clr -(r1)                     ; clear ba
      73 000144 012741  177000                   mov #-512.,-(r1)              ; load wc
      74 000150 012741  000005                   mov #5,-(r1)                  ; read+go
      75 000154 105711                           tstb (r1)
      76 000156 100376                           bpl .-2
      77 000160 105011                           clrb (r1)
      78                                
      79 000162 005000                           clr r0
      80 000164 005002                           clr r2
      81 000166 005003                           clr r3
      82 000170 012704  002020                   mov #2000+20,r4
      83 000174 005005                           clr r5
      84 000176 005007                           clr pc
      85                                ;
      86                                brl:
      87 000200 012704  173360                   mov #nbrl+173000,r4           ; if probe fails, nbrl
      88 000204 012705  173224                   mov #brl2+173000,r5           ; if probe ok, brl2
      89 000210 012701  174400                   mov #174400,r1
      90 000214 012702  173704                   mov #bootrl+173000,r2
      91 000220 000167  000304                   jmp cbarf
      92                                brl2:
      93 000224 012706  002000                   mov #2000,sp
      94 000230 005000                           clr r0
      95 000232 012701  174400                   mov #174400,r1                ; csr
      96 000236 012761  000013  000004           mov #13,4(r1)                 ; clear error - set rst in the dar, prepare for get status cmd
      97 000244 012711  000004                   mov #4,(r1)                   ; issue cmd - unit + gstat
      98 000250 105711                           tstb (r1)                     ; wait
      99 000252 100376                           bpl .-2
     100 000254 012711  000010                   mov #10,(r1)                  ; issue cmd - unit + rhdr
     101 000260 105711                           tstb (r1)                     ; wait
     102 000262 100376                           bpl .-2
     103 000264 016102  000006                   mov 6(r1),r2                  ; get hdr
     104 000270 042702  000077                   bic #77,r2                    ; clear sector
     105 000274 005202                           inc r2                        ; magic bit
     106 000276 010261  000004                   mov r2,4(r1)                  ; seek to 0
     107 000302 012711  000006                   mov #6,(r1)                   ; issue cmd - unit + seek
     108 000306 105711                           tstb (r1)                     ; wait
     109 000310 100376                           bpl .-2
     110 000312 005061  000002                   clr 2(r1)                     ; clr bar
     111 000316 005061  000004                   clr 4(r1)                     ; clr dar
     112 000322 012761  177000  000006           mov #-512.,6(r1)              ; set wc to read 512 words
     113 000330 012711  000014                   mov #14,(r1)                  ; issue cmd - unit + read
     114 000334 105711                           tstb (r1)                     ; wait
     115 000336 100376                           bpl .-2
     116                                
     117 000340 042711  000377                   bic #377,(r1)
     118 000344 005002                           clr r2
     119 000346 005003                           clr r3
     120 000350 012704  002020                   mov #2000+20,r4
     121 000354 005005                           clr r5
     122 000356 005007                           clr pc
     123                                ;
     124                                nbrl:
     125 000360 012704  173512                   mov #nob+173000,r4             ; if probe fails, nob
     126 000364 012705  173404                   mov #brp+173000,r5             ; if probe ok, brp
     127 000370 012701  176700                   mov #176700,r1
     128 000374 012702  173724                   mov #bootrp+173000,r2
     129 000400 000167  000124                   jmp cbarf
     130                                ;
     131                                brp:
     132 000404 012706  002000                   mov #2000,sp
     133 000410 005000                           clr r0
     134 000412 012701  176700                   mov #176700,r1              ; address rpcs1
     135 000416 012761  000040  000010           mov #40,10(r1)              ; set cs2_clr - clear drive
     136 000424 010061  000010                   mov r0,10(r1)               ; set unit = 0
     137 000430 012711  000021                   mov #21,(r1)                ; cmd 21, read-in-preset
     138 000434 012761  010000  000032           mov #10000,32(r1)           ; fmt16b on
     139 000442 012761  177000  000002           mov #-512.,2(r1)            ; load wc
     140 000450 005061  000004                   clr 4(r1)                   ; clear ba
     141 000454 005061  000006                   clr 6(r1)                   ; clear da
     142 000460 005061  000034                   clr 34(r1)                  ; clear cyl
     143 000464 012711  000071                   mov #71,(r1)                ; read
     144 000470 105711                           tstb (r1)                   ; wait for ready
     145 000472 100376                           bpl .-2                     ; loop
     146 000474 005002                           clr r2
     147 000476 005003                           clr r3
     148 000500 012704  002020                   mov #2020,r4
     149 000504 005005                           clr r5
     150 000506 105011                           clrb (r1)
     151 000510 005007                           clr pc
     152                                ;
     153                                nob:
     154 000512 012702  173744                   mov #noboot+173000,r2
     155 000516 012705  173526                   mov #nob2+173000,r5
     156 000522 000167  000042                   jmp barf
     157                                nob2:
     158 000526 000000                           halt
     159                                ;
     160                                ; subroutines
     161                                ;
     162                                cbarf:
     163 000530 012706  002000                   mov #2000,sp
     164 000534 005037  000006                   clr @#6
     165 000540 010437  000004                   mov r4,@#4
     166 000544 005711                           tst (r1)
     167 000546 000167  000016                   jmp barf
     168                                pbarf:
     169 000552 012706  002000                   mov #2000,sp
     170 000556 005037  000006                   clr @#6
     171 000562 010537  000004                   mov r5,@#4
     172 000566 005711                           tst (r1)
     173                                barf:
     174 000570 005037  000004                   clr @#4
     175 000574 005037  000010                   clr @#10
     176 000600 105737  177564                   tstb @#177564
     177 000604 100375                           bpl .-4
     178 000606 112203                           movb (r2)+,r3
     179 000610 001403                           beq .+10
     180 000612 110337  177566                   movb r3, @#177566
     181 000616 000770                           br .-16
     182 000620 000115                           jmp (r5)
     183                                ;
     184                                ; data
     185                                ;
     186                                         .even
     187                                
     188 000622    040     015     012  hello:   .ascii / /<15><12>
     189 000625    110     145     154           .asciz /Hello, world [t44]: cpu 11/<57>
         000630    154     157     054  
         000633    040     167     157  
         000636    162     154     144  
         000641    040     133     164  
         000644    064     064     135  
         000647    072     040     143  
         000652    160     165     040  
         000655    061     061     057  
         000660    000                  
     190 000661    015     012     000  hello2:  .asciz <15><12>
     191                                
     192 000664    142     157     157  bootrk:  .asciz /boot from rk:/<15><12>
         000667    164     040     146  
         000672    162     157     155  
         000675    040     162     153  
         000700    072     015     012  
         000703    000                  
     193 000704    142     157     157  bootrl:  .asciz /boot from rl:/<15><12>
         000707    164     040     146  
         000712    162     157     155  
         000715    040     162     154  
         000720    072     015     012  
         000723    000                  
     194 000724    142     157     157  bootrp:  .asciz /boot from rp:/<15><12>
         000727    164     040     146  
         000732    162     157     155  
         000735    040     162     160  
         000740    072     015     012  
         000743    000                  
     195 000744    156     157     040  noboot:  .asciz /no dev/<15><12>
         000747    144     145     166  
         000752    015     012     000  
     196 000755    000                           .even
     196                                
