       1                                         .title m9312h38 - standalone high rom - show model and config, then boot rk or rl
       2                                ;--
       3                                ;-- Copyright (c) 2008-2019 Sytse van Slooten
       4                                ;--
       5                                ;-- Permission is hereby granted to any person obtaining a copy of these VHDL source files and
       6                                ;-- other language source files and associated documentation files ("the materials") to use
       7                                ;-- these materials solely for personal, non-commercial purposes.
       8                                ;-- You are also granted permission to make changes to the materials, on the condition that this
       9                                ;-- copyright notice is retained unchanged.
      10                                ;--
      11                                ;-- The materials are distributed in the hope that they will be useful, but WITHOUT ANY WARRANTY;
      12                                ;-- without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
      13                                ;--
      14                                ;
      15                                ; general purpose register definitions
      16                                ;
      17 000000                         r0       = %0
      18 000001                         r1       = %1
      19 000002                         r2       = %2
      20 000003                         r3       = %3
      21 000004                         r4       = %4
      22 000005                         r5       = %5
      23 000006                         r6       = %6
      24 000007                         r7       = %7
      25 000006                         sp       = %6
      26 000007                         pc       = %7
      27                                
      28 000000 012702  173622                   mov #hello+173000,r2
      29 000004 012705  173014                   mov #m000+173000,r5
      30 000010 000167  000554                   jmp barf
      31                                m000:
      32                                ;
      33                                ; decode cpu modelcode, should be in kernel r0 after reset
      34                                ;
      35 000014 012702  000057                   mov #47.,r2
      36                                m100:
      37 000020 005202                           inc r2
      38 000022 020027  000012                   cmp r0,#10.
      39 000026 002403                           blt m200
      40 000030 162700  000012                   sub #10.,r0
      41 000034 000771                           br m100
      42                                m200:
      43 000036 062700  000060                   add #48.,r0
      44 000042 105737  177564                   tstb @#177564
      45 000046 100375                           bpl .-4
      46 000050 110237  177566                   movb r2,@#177566
      47 000054 105737  177564                   tstb @#177564
      48 000060 100375                           bpl .-4
      49 000062 110037  177566                   movb r0,@#177566
      50                                ;
      51                                ; probe for fpu
      52                                ;
      53 000066 012705  173120                   mov #fpuend+173000,r5
      54 000072 012706  002000                   mov #2000,sp
      55 000076 010537  000010                   mov r5,@#10
      56 000102 005037  000012                   clr @#12
      57 000106 170001                           setf
      58 000110 012702  173664                   mov #fpu+173000,r2
      59 000114 000167  000450                   jmp barf
      60                                fpuend:
      61                                ;
      62                                ; probe for mmu
      63                                ;
      64 000120 012705  173140                   mov #ktend+173000,r5
      65 000124 012701  177572                   mov #177572,r1
      66 000130 012702  173671                   mov #kt11a+173000,r2
      67 000134 000167  000412                   jmp pbarf
      68                                ktend:
      69                                ;
      70                                ; probe for mmu ubm
      71                                ;
      72 000140 012705  173160                   mov #ubend+173000,r5
      73 000144 012701  170200                   mov #170200,r1
      74 000150 012702  173676                   mov #ubma+173000,r2
      75 000154 000167  000372                   jmp pbarf
      76                                ubend:
      77                                ;
      78                                ; probe for kw controller
      79                                ;
      80 000160 012705  173200                   mov #kwend+173000,r5
      81 000164 012701  177564                   mov #177564,r1
      82 000170 012702  173703                   mov #kw11a+173000,r2
      83 000174 000167  000352                   jmp pbarf
      84                                kwend:
      85                                ;
      86                                ; probe for slu controller
      87                                ;
      88 000200 012705  173220                   mov #slend+173000,r5
      89 000204 012701  177560                   mov #177560,r1
      90 000210 012702  173710                   mov #slu+173000,r2
      91 000214 000167  000332                   jmp pbarf
      92                                slend:
      93                                ;
      94                                ; probe for rk11 controller
      95                                ;
      96                                ;         mov #rkend+173000,r5
      97                                ;         mov #177400,r1
      98                                ;         mov #rk11a+173000,r2
      99                                ;         jmp pbarf
     100                                ;rkend:
     101                                ;
     102                                ; probe for rl11 controller
     103                                ;
     104                                ;         mov #rlend+173000,r5
     105                                ;         mov #174400,r1
     106                                ;         mov #rl11a+173000,r2
     107                                ;         jmp pbarf
     108                                ;rlend:
     109                                ;
     110                                ;
     111                                ;
     112 000220 012702  173661                   mov #hello2+173000,r2
     113 000224 012705  173234                   mov #l1+173000,r5
     114 000230 000167  000334                   jmp barf
     115                                l1:
     116                                ;
     117                                ; copied (more or less) from simh
     118                                ;
     119 000234 012704  173332                   mov #brl+173000,r4           ; if probe fails, brl
     120 000240 012705  173260                   mov #brk+173000,r5           ; if probe ok, brk
     121 000244 012701  177400                   mov #177400,r1
     122 000250 012702  173714                   mov #bootrk+173000,r2
     123 000254 000167  000250                   jmp cbarf
     124                                ;
     125                                brk:
     126 000260 012706  002000                   mov #2000,sp
     127 000264 005000                           clr r0
     128 000266 012701  177412                   mov #177412,r1                ; rkda
     129 000272 005011                           clr (r1)                      ; load da = 0
     130 000274 005041                           clr -(r1)                     ; clear ba
     131 000276 012741  177000                   mov #-512.,-(r1)              ; load wc
     132 000302 012741  000005                   mov #5,-(r1)                  ; read+go
     133 000306 105711                           tstb (r1)
     134 000310 100376                           bpl .-2
     135 000312 105011                           clrb (r1)
     136                                
     137 000314 005000                           clr r0
     138 000316 005002                           clr r2
     139 000320 005003                           clr r3
     140 000322 012704  002020                   mov #2000+20,r4
     141 000326 005005                           clr r5
     142 000330 005007                           clr pc
     143                                ;
     144                                brl:
     145 000332 012704  173512                   mov #nob+173000,r4           ; if probe fails, nob
     146 000336 012705  173356                   mov #brl2+173000,r5          ; if probe ok, brl2
     147 000342 012701  174400                   mov #174400,r1
     148 000346 012702  173734                   mov #bootrl+173000,r2
     149 000352 000167  000152                   jmp cbarf
     150                                brl2:
     151 000356 012706  002000                   mov #2000,sp
     152 000362 005000                           clr r0
     153 000364 012701  174400                   mov #174400,r1                ; csr
     154 000370 012761  000013  000004           mov #13,4(r1)                 ; clear error - set rst in the dar, prepare for get status cmd
     155 000376 012711  000004                   mov #4,(r1)                   ; issue cmd - unit + gstat
     156 000402 105711                           tstb (r1)                     ; wait
     157 000404 100376                           bpl .-2
     158 000406 012711  000010                   mov #10,(r1)                  ; issue cmd - unit + rhdr
     159 000412 105711                           tstb (r1)                     ; wait
     160 000414 100376                           bpl .-2
     161 000416 016102  000006                   mov 6(r1),r2                  ; get hdr
     162 000422 042702  000077                   bic #77,r2                    ; clear sector
     163 000426 005202                           inc r2                        ; magic bit
     164 000430 010261  000004                   mov r2,4(r1)                  ; seek to 0
     165 000434 012711  000006                   mov #6,(r1)                   ; issue cmd - unit + seek
     166 000440 105711                           tstb (r1)                     ; wait
     167 000442 100376                           bpl .-2
     168 000444 005061  000002                   clr 2(r1)                     ; clr bar
     169 000450 005061  000004                   clr 4(r1)                     ; clr dar
     170 000454 012761  177000  000006           mov #-512.,6(r1)              ; set wc to read 512 words
     171 000462 012711  000014                   mov #14,(r1)                  ; issue cmd - unit + read
     172 000466 105711                           tstb (r1)                     ; wait
     173 000470 100376                           bpl .-2
     174                                
     175 000472 042711  000377                   bic #377,(r1)
     176 000476 005002                           clr r2
     177 000500 005003                           clr r3
     178 000502 012704  002020                   mov #2000+20,r4
     179 000506 005005                           clr r5
     180 000510 005007                           clr pc
     181                                ;
     182                                nob:
     183 000512 012702  173754                   mov #noboot+173000,r2
     184 000516 012705  173526                   mov #nob2+173000,r5
     185 000522 000167  000042                   jmp barf
     186                                nob2:
     187 000526 000000                           halt
     188                                ;
     189                                ; subroutines
     190                                ;
     191                                cbarf:
     192 000530 012706  002000                   mov #2000,sp
     193 000534 005037  000006                   clr @#6
     194 000540 010437  000004                   mov r4,@#4
     195 000544 005711                           tst (r1)
     196 000546 000167  000016                   jmp barf
     197                                pbarf:
     198 000552 012706  002000                   mov #2000,sp
     199 000556 005037  000006                   clr @#6
     200 000562 010537  000004                   mov r5,@#4
     201 000566 005711                           tst (r1)
     202                                barf:
     203 000570 005037  000004                   clr @#4
     204 000574 005037  000010                   clr @#10
     205 000600 105737  177564                   tstb @#177564
     206 000604 100375                           bpl .-4
     207 000606 112203                           movb (r2)+,r3
     208 000610 001403                           beq .+10
     209 000612 110337  177566                   movb r3, @#177566
     210 000616 000770                           br .-16
     211 000620 000115                           jmp (r5)
     212                                ;
     213                                ; data
     214                                ;
     215                                         .even
     216                                
     217 000622    040     015     012  hello:   .ascii / /<15><12>
     218 000625    110     145     154           .asciz /Hello, world [t38]: cpu 11/<57>
         000630    154     157     054  
         000633    040     167     157  
         000636    162     154     144  
         000641    040     133     164  
         000644    063     070     135  
         000647    072     040     143  
         000652    160     165     040  
         000655    061     061     057  
         000660    000                  
     219 000661    015     012     000  hello2:  .asciz <15><12>
     220                                
     221 000664    040     146     160  fpu:     .asciz / fpu/
         000667    165     000          
     222 000671    040     155     155  kt11a:   .asciz / mmu/
         000674    165     000          
     223 000676    040     165     142  ubma:    .asciz / ubm/
         000701    155     000          
     224 000703    040     154     143  kw11a:   .asciz / lck/
         000706    153     000          
     225 000710    040     164     164  slu:     .asciz / tt/
         000713    000                  
     226                                ;rk11a:   .asciz / rk/
     227                                ;rl11a:   .asciz / rl/
     228                                
     229 000714    142     157     157  bootrk:  .asciz /boot from rk:/<15><12>
         000717    164     040     146  
         000722    162     157     155  
         000725    040     162     153  
         000730    072     015     012  
         000733    000                  
     230 000734    142     157     157  bootrl:  .asciz /boot from rl:/<15><12>
         000737    164     040     146  
         000742    162     157     155  
         000745    040     162     154  
         000750    072     015     012  
         000753    000                  
     231 000754    156     157     040  noboot:  .asciz /no dev/<15><12>
         000757    144     145     166  
         000762    015     012     000  
     232 000765    000                           .even
     232                                
